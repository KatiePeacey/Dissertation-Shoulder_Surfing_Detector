
@misc{ben_shneiderman_ben_nodate,
	title = {Ben {Shneiderman}: {The} {Eight} {Golden} {Rules} of {Interface} {Design}},
	url = {https://www.cs.umd.edu/users/ben/goldenrules.html},
	urldate = {2025-05-05},
	author = {{Ben Shneiderman}},
}

@inproceedings{kukartsev_deep_2024,
	address = {Cham},
	title = {Deep {Learning} for {Object} {Detection} in {Images} {Development} and {Evaluation} of the {YOLOv8} {Model} {Using} {Ultralytics} and {Roboflow} {Libraries}},
	isbn = {978-3-031-70285-3},
	doi = {10.1007/978-3-031-70285-3_48},
	abstract = {This paper presents a study of the application of the YOLOv8 model for object detection in images using Ultralytics and Roboflow libraries. Deep learning in computer vision is one of the most actively developing areas in modern technologies, allowing to automate the processes of analysis and recognition of objects in images. The YOLO (You Only Look Once) model is one of the most effective and widely used methods for real-time object detection. The study covers the main steps of working with the YOLOv8 model, from installing and configuring the necessary libraries and development environment, to training the model on the provided data and evaluating its performance. We present a detailed analysis of the training process, including selection of optimal hyperparameters, tuning of training parameters and data augmentation.},
	language = {en},
	booktitle = {Software {Engineering} {Methods} {Design} and {Application}},
	publisher = {Springer Nature Switzerland},
	author = {Kukartsev, V. V. and Ageev, R. A. and Borodulin, A. S. and Gantimurov, A. P. and Kleshko, I. I.},
	editor = {Silhavy, Radek and Silhavy, Petr},
	year = {2024},
	pages = {629--637},
}

@inproceedings{culjak_brief_2012,
	title = {A brief introduction to {OpenCV}},
	url = {https://ieeexplore.ieee.org/document/6240859/},
	abstract = {The purpose of this paper is to introduce and quickly make a reader familiar with OpenCV (Open Source Computer Vision) basics without having to go through the lengthy reference manuals and books. OpenCV is an open source library for image and video analysis, originally introduced more than decade ago by Intel. Since then, a number of programmers have contributed to the most recent library developments. The latest major change took place in 2009 (OpenCV 2) which includes main changes to the C++ interface. Nowadays the library has {\textgreater}2500 optimized algorithms. It is extensively used around the world, having {\textgreater}2.5M downloads and {\textgreater}40K people in the user group. Regardless of whether one is a novice C++ programmer or a professional software developer, unaware of OpenCV, the main library content should be interesting for the graduate students and researchers in image processing and computer vision areas. To master every library element it is necessary to consult many books available on the topic of OpenCV. However, reading such more comprehensive material should be easier after comprehending some basics about OpenCV from this paper.},
	urldate = {2025-05-05},
	booktitle = {2012 {Proceedings} of the 35th {International} {Convention} {MIPRO}},
	author = {Culjak, Ivan and Abram, David and Pribanic, Tomislav and Dzapo, Hrvoje and Cifrek, Mario},
	month = may,
	year = {2012},
	keywords = {Cameras, Computer vision, Detectors, Histograms, Image edge detection, Libraries, Low pass filters},
	pages = {1725--1730},
}

@article{chen_study_2017,
	title = {A study on the changes of dynamic feature code when fixing bugs: towards the benefits and costs of {Python} dynamic features},
	volume = {61},
	issn = {1869-1919},
	shorttitle = {A study on the changes of dynamic feature code when fixing bugs},
	url = {https://doi.org/10.1007/s11432-017-9153-3},
	doi = {10.1007/s11432-017-9153-3},
	abstract = {Dynamic features in programming languages support the modification of the execution status at runtime, which is often considered helpful in rapid development and prototyping. However, it was also reported that some dynamic feature code tends to be change-prone or error-prone. We present the first study that analyzes the changes of dynamic feature code and the roles of dynamic features in bug-fix activities for the Python language. We used an AST-based differencing tool to capture fine-grained source code changes from 17926 bug-fix commits in 17 Python projects. Using this data, we conducted an empirical study on the changes of dynamic feature code when fixing bugs in Python. First, we investigated the characteristics of dynamic feature code changes, by comparing the changes between dynamic feature code and non-dynamic feature code when fixing bugs, and comparing dynamic feature changes between bug-fix and non-bugfix activities. Second, we explored 226 bug-fix commits to investigate the motivation and behaviors of dynamic feature changes when fixing bugs. The study results reveal that (1) the changes of dynamic feature code are significantly related to bug-fix activities rather than non-bugfix activities; (2) compared with non-dynamic feature code, dynamic feature code is inserted or updated more frequently when fixing bugs; (3) developers often insert dynamic feature code as type checks or attribute checks to fix type errors and attribute errors; (4) the misuse of dynamic features introduces bugs in dynamic feature code, and the bugs are often fixed by adding a check or adding an exception handling. As a benefit of this paper, we gain insights into the manner in which developers and researchers handle the changes of dynamic feature code when fixing bugs.},
	language = {en},
	number = {1},
	urldate = {2025-05-05},
	journal = {Science China Information Sciences},
	author = {Chen, Zhifei and Ma, Wanwangying and Lin, Wei and Chen, Lin and Li, Yanhui and Xu, Baowen},
	month = dec,
	year = {2017},
	keywords = {Python, bug fixing, change behaviors, dynamic features, fine-grained code changes},
	pages = {012107},
}

@book{kazemi_one_2014,
	title = {One {Millisecond} {Face} {Alignment} with an {Ensemble} of {Regression} {Trees}},
	abstract = {This paper addresses the problem of Face Alignment for a single image. We show how an ensemble of regression trees can be used to estimate the face's landmark positions directly from a sparse subset of pixel intensities, achieving super-realtime performance with high quality predictions. We present a general framework based on gradient boosting for learning an ensemble of regression trees that optimizes the sum of square error loss and naturally handles missing or partially labelled data. We show how using appropriate priors exploiting the structure of image data helps with ef-ficient feature selection. Different regularization strategies and its importance to combat overfitting are also investi-gated. In addition, we analyse the effect of the quantity of training data on the accuracy of the predictions and explore the effect of data augmentation using synthesized data.},
	author = {Kazemi, Vahid and Sullivan, Josephine},
	month = jun,
	year = {2014},
	doi = {10.13140/2.1.1212.2243},
}

@misc{noauthor_one_nodate,
	title = {One {Millisecond} {Face} {Alignment} with an {Ensemble} of {Regression} {Trees}},
	url = {https://www.cv-foundation.org/openaccess/content_cvpr_2014/papers/Kazemi_One_Millisecond_Face_2014_CVPR_paper.pdf},
	urldate = {2025-05-05},
}

@misc{noauthor_imagenet_nodate,
	title = {{ImageNet}},
	url = {https://www.image-net.org/},
	urldate = {2024-10-26},
}

@inproceedings{redmon_you_2016,
	address = {Las Vegas, NV, USA},
	title = {You {Only} {Look} {Once}: {Unified}, {Real}-{Time} {Object} {Detection}},
	isbn = {978-1-4673-8851-1},
	shorttitle = {You {Only} {Look} {Once}},
	url = {http://ieeexplore.ieee.org/document/7780460/},
	doi = {10.1109/CVPR.2016.91},
	abstract = {We present YOLO, a new approach to object detection. Prior work on object detection repurposes classiÔ¨Åers to perform detection. Instead, we frame object detection as a regression problem to spatially separated bounding boxes and associated class probabilities. A single neural network predicts bounding boxes and class probabilities directly from full images in one evaluation. Since the whole detection pipeline is a single network, it can be optimized end-to-end directly on detection performance.},
	language = {en},
	urldate = {2024-10-26},
	booktitle = {2016 {IEEE} {Conference} on {Computer} {Vision} and {Pattern} {Recognition} ({CVPR})},
	publisher = {IEEE},
	author = {Redmon, Joseph and Divvala, Santosh and Girshick, Ross and Farhadi, Ali},
	month = jun,
	year = {2016},
	pages = {779--788},
}

@article{nielsen_usability_nodate,
	title = {usability heuristics for user interface design. {Nielsen} {Norman} {Group}},
	url = {https://scholar.google.com/scholar?cluster=5073095284937051269&hl=en&oi=scholarr},
	urldate = {2025-05-05},
	author = {Nielsen, Jakob},
}

@inproceedings{norman_design_1983,
	address = {New York, NY, USA},
	series = {{CHI} '83},
	title = {Design principles for human-computer interfaces},
	isbn = {978-0-89791-121-4},
	url = {https://dl.acm.org/doi/10.1145/800045.801571},
	doi = {10.1145/800045.801571},
	abstract = {If the field of Human Factors in Computer Systems is to be a success it must develop design principles that are useful, principles that apply across a wide range of technologies. In the first part of this paper I discuss some the properties that useful principles should have. While I am at it, I warn of the dangers of the tar pits and the sirens of technology. We cannot avoid these dangers entirely, for were we to do so, we would fail to cope with the real problems and hazards of the field.The second part of the paper is intended to illustrate the first part through the example of tradeoff analysis. Any single design technique is apt to have its virtues along one dimension compensated by deficiencies along another. Tradeoff analysis provides a quantitative method of assessing tradeoff relations for two attributes xi and xj by first determining the User Satisfaction function for each, U(x), then showing how U(xi) trades off against U(xj). In general, the User Satisfaction for a system is given by the weighted sum of the User Satisfaction values for the attributes. The analysis is used to examine two different tradeoffs of information versus time and editor workspace versus menu size. Tradeoffs involving command languages versus menu-based systems, choices of names, and handheld computers versus workstations are examined briefly.},
	urldate = {2025-05-05},
	booktitle = {Proceedings of the {SIGCHI} {Conference} on {Human} {Factors} in {Computing} {Systems}},
	publisher = {Association for Computing Machinery},
	author = {Norman, Donald A.},
	month = dec,
	year = {1983},
	pages = {1--10},
}

@article{corbett_shouldar_2024,
	title = {{ShouldAR}: {Detecting} {Shoulder} {Surfing} {Attacks} {Using} {Multimodal} {Eye} {Tracking} and {Augmented} {Reality}},
	volume = {8},
	issn = {2474-9567},
	shorttitle = {{ShouldAR}},
	url = {https://dl.acm.org/doi/10.1145/3678573},
	doi = {10.1145/3678573},
	abstract = {Shoulder surfing attacks (SSAs) are a type of observation attack designed to illicitly gather sensitive data from "over the shoulder" of victims. This attack can be directed at mobile devices, desktop screens, Personal Identification Number (PIN) pads at an Automated Teller Machine (ATM), or written text. Existing solutions are generally focused on authentication techniques (e.g., logins) and are limited to specific attack scenarios (e.g., mobile devices or PIN Pads). We present ShotjldAR, a mobile and usable system to detect SSAs using multimodal eye gaze information (i.e., from both the potential attacker and victim). ShouldAR uses an augmented reality headset as a platform to incorporate user eye gaze tracking, rear-facing image collection and eye gaze analysis, and user notification of potential attacks. In a 24-participant study, we show that the prototype is capable of detecting 87.28\% of SSAs against both physical and digital targets, a two-fold improvement on the baseline solution using a rear-facing mirror, a widely used solution to the SSA problem. The ShouldAR approach provides an AR-based, active SSA defense that applies to both digital and physical information entry in sensitive environments.},
	language = {en},
	number = {3},
	urldate = {2025-05-05},
	journal = {Proceedings of the ACM on Interactive, Mobile, Wearable and Ubiquitous Technologies},
	author = {Corbett, Matthew and David-John, Brendan and Shang, Jiacheng and Ji, Bo},
	month = aug,
	year = {2024},
	pages = {1--23},
}

@article{bace_privacyscout_2022,
	title = {{PrivacyScout}: {Assessing} {Vulnerability} to {Shoulder} {Surfing} on {Mobile} {Devices}},
	issn = {2299-0984},
	shorttitle = {{PrivacyScout}},
	url = {https://petsymposium.org/popets/2022/popets-2022-0090.php},
	urldate = {2025-05-05},
	journal = {Proceedings on Privacy Enhancing Technologies},
	author = {B√¢ce, Mihai and Saad, Alia and Khamis, Mohamed and Schneegass, Stefan and Bulling, Andreas},
	year = {2022},
}

@inproceedings{khan_usability_2015,
	title = {Usability and {Security} {Perceptions} of {Implicit} {Authentication}: {Convenient}, {Secure}, {Sometimes} {Annoying}},
	isbn = {978-1-931971-24-9},
	shorttitle = {Usability and {Security} {Perceptions} of {Implicit} {Authentication}},
	url = {https://www.usenix.org/conference/soups2015/proceedings/presentation/khan},
	language = {en},
	urldate = {2025-05-05},
	author = {Khan, Hassan and Hengartner, Urs and Vogel, Daniel},
	year = {2015},
	pages = {225},
}

@book{jain_introduction_2011,
	title = {Introduction to {Biometrics}},
	isbn = {978-0-387-77326-1},
	abstract = {Biometric recognition, or simply biometrics, is the science of establishing the identity of a person based on physical or behavioral attributes. It is a rapidly evolving field with applications ranging from securely accessing one‚Äôs computer to gaining entry into a country. While the deployment of large-scale biometric systems in both commercial and government applications has increased the public awareness of this technology, "Introduction to Biometrics" is the first textbook to introduce the fundamentals of Biometrics to undergraduate/graduate students. The three commonly used modalities in the biometrics field, namely, fingerprint, face, and iris are covered in detail in this book. Few other modalities like hand geometry, ear, and gait are also discussed briefly along with advanced topics such as multibiometric systems and security of biometric systems. Exercises for each chapter will be available on the book website to help students gain a better understanding of the topics andobtain practical experience in designing computer programs for biometric applications. These can be found at: http://www.csee.wvu.edu/{\textasciitilde}ross/BiometricsTextBook/.Designed for undergraduate and graduate students in computer science and electrical engineering, "Introduction to Biometrics" is also suitable for researchers and biometric and computer security professionals.},
	language = {en},
	publisher = {Springer Science \& Business Media},
	author = {Jain, Anil K. and Ross, Arun A. and Nandakumar, Karthik},
	month = nov,
	year = {2011},
	note = {Google-Books-ID: ZPt2xrZFtzkC},
	keywords = {Computers / Artificial Intelligence / Computer Vision \& Pattern Recognition, Computers / Database Administration \& Management, Computers / Design, Graphics \& Media / Graphics Tools, Computers / Image Processing, Computers / Information Theory, Computers / Interactive \& Multimedia, Computers / Optical Data Processing, Computers / Programming / Algorithms, Computers / Security / Cryptography \& Encryption, Computers / Software Development \& Engineering / General, Language Arts \& Disciplines / Library \& Information Science / General},
}

@inproceedings{de_luca_colorpin_2010,
	address = {New York, NY, USA},
	series = {{CHI} '10},
	title = {{ColorPIN}: securing {PIN} entry through indirect input},
	isbn = {978-1-60558-929-9},
	shorttitle = {{ColorPIN}},
	url = {https://dl.acm.org/doi/10.1145/1753326.1753490},
	doi = {10.1145/1753326.1753490},
	abstract = {Automated teller machine (ATM) frauds are increasing drastically these days. When analyzing the most common attacks and the reasons for successful frauds, it becomes apparent that the main problem lies in the PIN based authentication which in itself does not provide any security features (besides the use of asterisks). That is, security is solely based on a user's behavior. Indirect input is one way to solve this problem. This mostly comes at the costs of adding overhead to the input process. We present ColorPIN, an authentication mechanism that uses indirect input to provide security enhanced PIN entry. At the same time, ColorPIN remains a one-to-one relationship between the length of the PIN and the required number of clicks. A user study showed that ColorPIN is significantly more secure than standard PIN entry while enabling good authentication speed in comparison with related systems.},
	urldate = {2025-05-05},
	booktitle = {Proceedings of the {SIGCHI} {Conference} on {Human} {Factors} in {Computing} {Systems}},
	publisher = {Association for Computing Machinery},
	author = {De Luca, Alexander and Hertzschuch, Katja and Hussmann, Heinrich},
	month = apr,
	year = {2010},
	pages = {1103--1106},
}

@book{tan_spy-resistant_2005,
	title = {Spy-resistant keyboard: more secure password entry on public touch screen displays.},
	shorttitle = {Spy-resistant keyboard},
	abstract = {Current software interfaces for entering text on touch screen devices mimic existing mechanisms such as keyboard typing or handwriting. These techniques are poor for entering private text such as passwords since they allow observers to decipher what has been typed simply by looking over the typist's shoulder, an activity known as shoulder surfing. In this paper, we outline a general approach for designing security-sensitive onscreen virtual keyboards that allow users to enter private text without revealing it to observers. We present one instantiation, the Spy-Resistant Keyboard, and discuss design decisions leading to the development of this keyboard. We also describe the results of a user study exploring the usability and security of our interface. Results indicate that although users took longer to enter their passwords, using the Spy-Resistant Keyboard rather than a standard soft keyboard resulted in a significant increase in their ability to protect their passwords from a watchful observer.},
	author = {Tan, Desney and Keyani, Pedram and Czerwinski, Mary},
	month = jan,
	year = {2005},
	doi = {10.1145/1108368.1108393},
}

@inproceedings{tari_comparison_2006,
	address = {New York, NY, USA},
	series = {{SOUPS} '06},
	title = {A comparison of perceived and real shoulder-surfing risks between alphanumeric and graphical passwords},
	isbn = {978-1-59593-448-2},
	url = {https://dl.acm.org/doi/10.1145/1143120.1143128},
	doi = {10.1145/1143120.1143128},
	abstract = {Previous research has found graphical passwords to be more memorable than non-dictionary or "strong" alphanumeric passwords. Participants in a prior study expressed concerns that this increase in memorability could also lead to an increased susceptibility of graphical passwords to shoulder-surfing. This appears to be yet another example of the classic trade-off between usability and security for authentication systems. This paper explores whether graphical passwords' increased memorability necessarily leads to risks of shoulder-surfing. To date, there are no studies examining the vulnerability of graphical versus alphanumeric passwords to shoulder-surfing.This paper examines the real and perceived vulnerability to shoulder-surfing of two configurations of a graphical password, Passfaces‚Ñ¢[30], compared to non-dictionary and dictionary passwords. A laboratory experiment with 20 participants asked them to try to shoulder surf the two configurations of Passfaces‚Ñ¢ (mouse versus keyboard data entry) and strong and weak passwords. Data gathered included the vulnerability of the four authentication system configurations to shoulder-surfing and study participants' perceptions concerning the same vulnerability. An analysis of these data compared the relative vulnerability of each of the four configurations to shoulder-surfing and also compared study participants' real and perceived success in shoulder-surfing each of the configurations. Further analysis examined the relationship between study participants' real and perceived success in shoulder-surfing and determined whether there were significant differences in the vulnerability of the four authentication configurations to shoulder-surfing.Findings indicate that configuring data entry for Passfaces‚Ñ¢ through a keyboard is the most effective deterrent to shoulder-surfing in a laboratory setting and the participants' perceptions were consistent with that result. While study participants believed that Passfaces‚Ñ¢ with mouse data entry would be most vulnerable to shoulder-surfing attacks, the empirical results found that strong passwords were actually more vulnerable.},
	urldate = {2025-05-05},
	booktitle = {Proceedings of the second symposium on {Usable} privacy and security},
	publisher = {Association for Computing Machinery},
	author = {Tari, Furkan and Ozok, A. Ant and Holden, Stephen H.},
	month = jul,
	year = {2006},
	pages = {56--66},
}

@book{anderson_security_2001,
	address = {USA},
	edition = {1st},
	title = {Security {Engineering}: {A} {Guide} to {Building} {Dependable} {Distributed} {Systems}},
	isbn = {978-0-471-38922-4},
	shorttitle = {Security {Engineering}},
	abstract = {From the Publisher: The first quick reference guide to the do's and don'ts of creating high quality security systems. Ross Anderson, widely recognized as one of the world's foremost authorities on security engineering, presents a comprehensive design tutorial that covers a wide range of applications. Designed for today's programmers who need to build systems that withstand malice as well as error (but have no time to go do a PhD in security), this bookillustrates basic concepts through many real-world system design successes and failures. Topics range from firewalls, through phone phreaking and copyright protection, to frauds against e-businesses. Anderson's book shows how to use a wide range of tools, from cryptology through smartcards to applied psychology. As everything from burglar alarms through heart monitors to bus ticket dispensers starts talking IP, the techniques taught in this book will become vital to everyone who wants to build systems that are secure, dependable and manageable.},
	publisher = {John Wiley \& Sons, Inc.},
	author = {Anderson, Ross J.},
	month = jan,
	year = {2001},
}

@book{long_no_2011,
	title = {No {Tech} {Hacking}: {A} {Guide} to {Social} {Engineering}, {Dumpster} {Diving}, and {Shoulder} {Surfing}},
	isbn = {978-0-08-055875-2},
	shorttitle = {No {Tech} {Hacking}},
	abstract = {Johnny Long's last book sold 12,000 units worldwide. Kevin Mitnick's last book sold 40,000 units in North America.As the clich√© goes, information is power. In this age of technology, an increasing majority of the world's information is stored electronically. It makes sense then that we rely on high-tech electronic protection systems to guard that information. As professional hackers, Johnny Long and Kevin Mitnick get paid to uncover weaknesses in those systems and exploit them. Whether breaking into buildings or slipping past industrial-grade firewalls, their goal has always been the same: extract the information using any means necessary. After hundreds of jobs, they have discovered the secrets to bypassing every conceivable high-tech security system. This book reveals those secrets; as the title suggests, it has nothing to do with high technology.‚Ä¢ Dumpster DivingBe a good sport and don't read the two "D words written in big bold letters above, and act surprised when I tell you hackers can accomplish this without relying on a single bit of technology (punny). ‚Ä¢ TailgatingHackers and ninja both like wearing black, and they do share the ability to slip inside a building and blend with the shadows.‚Ä¢ Shoulder SurfingIf you like having a screen on your laptop so you can see what you're working on, don't read this chapter.‚Ä¢ Physical SecurityLocks are serious business and lock technicians are true engineers, most backed with years of hands-on experience. But what happens when you take the age-old respected profession of the locksmith and sprinkle it with hacker ingenuity?‚Ä¢ Social Engineering with Jack WilesJack has trained hundreds of federal agents, corporate attorneys, CEOs and internal auditors on computer crime and security-related topics. His unforgettable presentations are filled with three decades of personal "war stories" from the trenches of Information Security and Physical Security. ‚Ä¢ Google HackingA hacker doesn't even need his own computer to do the necessary research. If he can make it to a public library, Kinko's or Internet cafe, he can use Google to process all that data into something useful.‚Ä¢ P2P HackingLet's assume a guy has no budget, no commercial hacking software, no support from organized crime and no fancy gear. With all those restrictions, is this guy still a threat to you? Have a look at this chapter and judge for yourself.‚Ä¢ People WatchingSkilled people watchers can learn a whole lot in just a few quick glances. In this chapter we'll take a look at a few examples of the types of things that draws a no-tech hacker's eye.‚Ä¢ KiosksWhat happens when a kiosk is more than a kiosk? What happens when the kiosk holds airline passenger information? What if the kiosk holds confidential patient information? What if the kiosk holds cash?‚Ä¢ Vehicle SurveillanceMost people don't realize that some of the most thrilling vehicular espionage happens when the cars aren't moving at all!},
	language = {en},
	publisher = {Syngress},
	author = {Long, Johnny},
	month = apr,
	year = {2011},
	note = {Google-Books-ID: Fe63fUkm2oMC},
	keywords = {Business \& Economics / Training, Computers / Security / General},
}

@article{nali_analyzing_2004,
	title = {Analyzing user choice in graphical passwords},
	abstract = {In ubiquitous textual password schemes, users choose passwords that contain predictable character-istics that are roughly equated with what users find easy to recall. This motivates us to examine user choice in graphical passwords to determine whether predictable characteristics exist that may reduce the entropy of the password space. We present an informal user study of the scheme proposed by Jermyn et al. (1999), and the results, both in context of the study's goals and a separate analysis of the results performed at a later date. Our results support that user drawings contain the predictable characteris-tics relating to symmetry, number of composite strokes, and centering within the grid. Our results also highlight a usability challenge with the DAS scheme.},
	author = {Nali, Deholo and Thorpe, Julie},
	month = apr,
	year = {2004},
}

@inproceedings{liu_passface_2021,
	title = {{PassFace}: {Enabling} {Practical} {Anti}-{Spoofing} {Facial} {Recognition} with {Camera} {Fingerprinting}},
	shorttitle = {{PassFace}},
	url = {https://ieeexplore.ieee.org/document/9501053},
	doi = {10.1109/ICC42927.2021.9501053},
	abstract = {Facial recognition has become the surge on mobile authentication scenarios and makes up a huge market share for various apps, such as MasterCard, Google Wallet, and AliPay. However, existing solutions suffer from various impersonation attacks, including photo-spoofing attack, video-replay attack, and 3D facial mask attack. State-of-the-art countermeasures either require additional user intervention or introduce specialized high-end sensors. Even introducing these extra efforts, these approaches still hardly defend the latest 3D facial mask attacks, which gradually become accessible due to the prevalence of low-cost 3D printing. In this paper, we propose an anti-spoofing facial recognition system, PassFace, which verifies the smartphone for authentication as the second factor merely using raw facial videos without any user intervention, to defeat impersonation attacks. In particular, when receiving a user‚Äôs selfie video, PassFace identifies the user‚Äôs face from the video, and meanwhile extracts the highly unique and physically irreproducible camera fingerprint, i.e., Photo Response Non-Uniformity (PRNU), built in the smartphone from key frames of the video. After that, the system compares the Peak to Correlation Energy (PCE) calculated by the estimated PRNU and the reference profile with a threshold for authentication. Experiment results demonstrate PassFace can achieve satisfactory performance in authentication and attack resistance.},
	urldate = {2025-05-01},
	booktitle = {{ICC} 2021 - {IEEE} {International} {Conference} on {Communications}},
	author = {Liu, Liu and Yu, Hanlin and Ba, Zhongjie and Lu, Li and Lin, Feng and Ren, Kui},
	month = jun,
	year = {2021},
	note = {ISSN: 1938-1883},
	keywords = {Authentication, Cameras, Face recognition, Fingerprint recognition, Resistance, Three-dimensional displays, Three-dimensional printing, authentication, facial recognition system, photo response non-uniformity (PRNU)},
	pages = {1--6},
}

@misc{noauthor_pdf_2024,
	title = {({PDF}) "{What} you think is private is no longer" -- {Investigating} the {Aftermath} of {Shoulder} {Surfing} on {Smartphones} in {Everyday} {Life} through the {Eyes} of the {Victims}},
	url = {https://www.researchgate.net/publication/386210820_What_you_think_is_private_is_no_longer_--_Investigating_the_Aftermath_of_Shoulder_Surfing_on_Smartphones_in_Everyday_Life_through_the_Eyes_of_the_Victims},
	abstract = {PDF {\textbar} Shoulder surfing has been studied extensively, however, it remains unexplored whether and how it impacts users. Understanding this is important as... {\textbar} Find, read and cite all the research you need on ResearchGate},
	language = {en},
	urldate = {2025-05-01},
	journal = {ResearchGate},
	month = nov,
	year = {2024},
	doi = {10.48550/arXiv.2411.18265},
}

@inproceedings{brudy_is_2014,
	address = {New York, NY, USA},
	series = {{PerDis} '14},
	title = {Is {Anyone} {Looking}? {Mitigating} {Shoulder} {Surfing} on {Public} {Displays} through {Awareness} and {Protection}},
	isbn = {978-1-4503-2952-1},
	shorttitle = {Is {Anyone} {Looking}?},
	url = {https://dl.acm.org/doi/10.1145/2611009.2611028},
	doi = {10.1145/2611009.2611028},
	abstract = {Displays are growing in size, and are increasingly deployed in semi-public and public areas. When people use these public displays to pursue personal work, they expose their activities and sensitive data to passers-by. In most cases, such shoulder-surfing by others is likely voyeuristic vs. a deliberate attempt to steal information. Even so, safeguards are needed. Our goal is to mitigate shoulder-surfing problems in such settings. Our method leverages notions of territoriality and proxemics, where we sense and take action based on the spatial relationships between the passerby, the user of the display, and the display itself. First, we provide participants with awareness of shoulder-surfing moments, which in turn helps both parties regulate their behaviours and mediate further social interactions. Second, we provide methods that protect information when shoulder-surfing is detected. Here, users can move or hide information through easy to perform explicit actions. Alternately, the system itself can mask information from the passerby's view when it detects shoulder-surfing moments.},
	urldate = {2025-05-01},
	booktitle = {Proceedings of {The} {International} {Symposium} on {Pervasive} {Displays}},
	publisher = {Association for Computing Machinery},
	author = {Brudy, Frederik and Ledo, David and Greenberg, Saul and Butz, Andreas},
	month = jun,
	year = {2014},
	pages = {1--6},
}

@inproceedings{block_impact_2010,
	address = {New York, NY, USA},
	series = {{NordiCHI} '10},
	title = {The impact of cognitive load on the perception of time},
	isbn = {978-1-60558-934-3},
	url = {https://doi.org/10.1145/1868914.1868985},
	doi = {10.1145/1868914.1868985},
	abstract = {In cognitive psychology it is well known that cognitive load can have a significant impact on time perception. In this paper, we present an observation made during an empirical evaluation of several input techniques, showing that the cognitive load occurring during user input can significantly reduce perceived time. We provide a discussion of our findings, proposing that existing work in cognitive psychology, such as the Cognitive-Timer Model is applicable to HCI; and that this understanding can provide valuable information for predicting and actively modeling perceived input performance when designing user interfaces.},
	urldate = {2025-05-01},
	booktitle = {Proceedings of the 6th {Nordic} {Conference} on {Human}-{Computer} {Interaction}: {Extending} {Boundaries}},
	publisher = {Association for Computing Machinery},
	author = {Block, Florian and Gellersen, Hans},
	month = oct,
	year = {2010},
	pages = {607--610},
}

@inproceedings{aviv_towards_2017,
	address = {New York, NY, USA},
	series = {{ACSAC} '17},
	title = {Towards {Baselines} for {Shoulder} {Surfing} on {Mobile} {Authentication}},
	isbn = {978-1-4503-5345-8},
	url = {https://doi.org/10.1145/3134600.3134609},
	doi = {10.1145/3134600.3134609},
	abstract = {Given the nature of mobile devices and unlock procedures, unlock authentication is a prime target for credential leaking via shoulder surfing, a form of an observation attack. While the research community has investigated solutions to minimize or prevent the threat of shoulder surfing, our understanding of how the attack performs on current systems is less well studied. In this paper, we describe a large online experiment (n = 1173) that works towards establishing a baseline of shoulder surfing vulnerability for current unlock authentication systems. Using controlled video recordings of a victim entering in a set of 4- and 6-length PINs and Android unlock patterns on different phones from different angles, we asked participants to act as attackers, trying to determine the authentication input based on the observation. We find that 6-digit PINs are the most elusive attacking surface where a single observation leads to just 10.8\% successful attacks (26.5\% with multiple observations). As a comparison, 6-length Android patterns, with one observation, were found to have an attack rate of 64.2\% (79.9\% with multiple observations). Removing feedback lines for patterns improves security to 35.3\% (52.1\% with multiple observations). This evidence, as well as other results related to hand position, phone size, and observation angle, suggests the best and worst case scenarios related to shoulder surfing vulnerability which can both help inform users to improve their security choices, as well as establish baselines for researchers.},
	urldate = {2025-05-01},
	booktitle = {Proceedings of the 33rd {Annual} {Computer} {Security} {Applications} {Conference}},
	publisher = {Association for Computing Machinery},
	author = {Aviv, Adam J. and Davin, John T. and Wolf, Flynn and Kuber, Ravi},
	month = dec,
	year = {2017},
	pages = {486--498},
}

@inproceedings{eiband_understanding_2017,
	address = {Denver Colorado USA},
	title = {Understanding {Shoulder} {Surfing} in the {Wild}: {Stories} from {Users} and {Observers}},
	isbn = {978-1-4503-4655-9},
	shorttitle = {Understanding {Shoulder} {Surfing} in the {Wild}},
	url = {https://dl.acm.org/doi/10.1145/3025453.3025636},
	doi = {10.1145/3025453.3025636},
	abstract = {Research has brought forth a variety of authentication systems to mitigate observation attacks. However, there is little work about shoulder surÔ¨Ång situations in the real world. We present the results of a user survey (N=174) in which we investigate actual stories about shoulder surÔ¨Ång on mobile devices from both users and observers. Our analysis indicates that shoulder surÔ¨Ång mainly occurs in an opportunistic, nonmalicious way. It usually does not have serious consequences, but evokes negative feelings for both parties, resulting in a variety of coping strategies. Observed data was personal in most cases and ranged from information about interests and hobbies to login data and intimate details about third persons and relationships. Thus, our work contributes evidence for shoulder surÔ¨Ång in the real world and informs implications for the design of privacy protection mechanisms.},
	language = {en},
	urldate = {2024-10-26},
	booktitle = {Proceedings of the 2017 {CHI} {Conference} on {Human} {Factors} in {Computing} {Systems}},
	publisher = {ACM},
	author = {Eiband, Malin and Khamis, Mohamed and Von Zezschwitz, Emanuel and Hussmann, Heinrich and Alt, Florian},
	month = may,
	year = {2017},
	pages = {4254--4265},
}

@misc{noauthor_dlib_nodate,
	title = {dlib {C}++ {Library}},
	url = {https://dlib.net/},
	urldate = {2025-05-01},
}
